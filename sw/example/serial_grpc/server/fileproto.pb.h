/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_FILEPROTO_PB_H_INCLUDED
#define PB_FILEPROTO_PB_H_INCLUDED
#include <pb.h>
#include "sys/types.h"
// #include "dirent.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _get_device_infoRequest {
    char dummy_field;
} get_device_infoRequest;

typedef struct _get_device_infoResponse {
    char type[30];
    char product[30];
    char ip[40];
} get_device_infoResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define get_device_infoRequest_init_default      {0}
#define get_device_infoResponse_init_default     {"", "", ""}
#define get_device_infoRequest_init_zero         {0}
#define get_device_infoResponse_init_zero        {"", "", ""}

/* Field tags (for use in manual encoding/decoding) */
#define get_device_infoResponse_type_tag         1
#define get_device_infoResponse_product_tag      2
#define get_device_infoResponse_ip_tag           3

/* Struct field encoding specification for nanopb */
#define get_device_infoRequest_FIELDLIST(X, a) \

#define get_device_infoRequest_CALLBACK NULL
#define get_device_infoRequest_DEFAULT NULL

#define get_device_infoResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   type,              1) \
X(a, STATIC,   REQUIRED, STRING,   product,           2) \
X(a, STATIC,   REQUIRED, STRING,   ip,                3)
#define get_device_infoResponse_CALLBACK NULL
#define get_device_infoResponse_DEFAULT NULL

extern const pb_msgdesc_t get_device_infoRequest_msg;
extern const pb_msgdesc_t get_device_infoResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define get_device_infoRequest_fields &get_device_infoRequest_msg
#define get_device_infoResponse_fields &get_device_infoResponse_msg

/* Maximum encoded size of messages (where known) */
#define FILEPROTO_PB_H_MAX_SIZE                  get_device_infoResponse_size
#define get_device_infoRequest_size              0
#define get_device_infoResponse_size             103

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
